
pipeline {
    agent any
    

    stages {
        stage('Clone Git`s repository') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios"){
                    script{
                        if (params.Action == 'apply') {
                            cleanWs()
                            git url: 'https://github.com/fsanjo268/TFG.git', branch: 'main' 
                        }
                    }
                }
            }
        }
         stage('Terraform init') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Terraform/${params.Exercise}"){
                    sh 'terraform init'
                }
            }
        }
         stage('Terraform code validation') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Terraform/${params.Exercise}"){
                    sh 'terraform validate'
                }
            }
        }
         stage ('Ansible code validation') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Ansible/Playbooks"){
                    sh 'ansible-playbook --syntax-check ping.yaml'
                }
            }
        }
        stage('Infraestructure plannification ') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Terraform/${params.Exercise}"){
                     script{
                        if (params.Action == 'apply') {
                            sh 'terraform plan -out tfplan'      
                        }
                     }
                }
            }
        }
        
        stage('Apply / Destroy') {
            steps {
                dir("/var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Terraform/${params.Exercise}"){
                    script {
                        if (params.Action == 'apply') {
                            sh 'terraform apply -input=false tfplan'
                        } else if (params.Action == 'destroy') {
                            sh 'terraform destroy --auto-approve'
                        }
                    }
                }
            }
        }
        stage('Check conection Ansible') {
            when { expression { params.Action == 'apply'}}
            steps {
                sh 'scp /var/lib/jenkins/workspace/TFG/Despliegue_ejercicios/Ansible ansible@virtual.lab.inf.uva.es:/home/ansible/'
                sh 'ssh -p 20101 ansible@virtual.lab.inf.uva.es'
                sh 'cd ./Ansible/'
                sh 'ansible-playbook /Playbooks/ping.yaml'
            }
        }
    }
    post {
        success {
            script {
                if (params.Action == 'destroy') {
                    cleanWs()
                }
            }
        }
        failure {
            steps {
                sh 'terraform destroy --auto-approve'
            }
        }
    }
}